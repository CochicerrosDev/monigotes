imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "../../vendor/sopinet/userbundle/Sopinet/UserBundle/Resources/config/config.yml" }
    - { resource: ../../vendor/knplabs/doctrine-behaviors/config/orm-services.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# SonataAdmin
sonata_admin:
    security:
        handler: sonata.admin.security.handler.role

# FOS
fos_user:
    db_driver: orm
    firewall_name: main # nombre anterior
    user_class: Application\Sopinet\UserBundle\Entity\User
    group:
        group_class:   Application\Sopinet\UserBundle\Entity\Group

# app/config/config.yml
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]

# SonataUser
sonata_user:
    security_acl: false
    manager_type: orm # can be orm or mongodb
    class:                  # Entity Classes
        user:               Application\Sopinet\UserBundle\Entity\User
        group:              Application\Sopinet\UserBundle\Entity\Group
    admin:
        user:
            class: Application\Sopinet\UserBundle\Admin\UserAdmin
        group:
            class: Application\Sopinet\UserBundle\Admin\GroupAdmin

# JSM Serializer
jms_serializer:
  metadata:
    auto_detection: true
    directories:
      FOSUserBundle:
        namespace_prefix: "FOS\\UserBundle"
        path: "@ApplicationSopinetUserBundle/Resources/config/serializer/fos"
      SonataUserBundle:
        namespace_prefix: "Sonata\\UserBundle"
        path: "@ApplicationSopinetUserBundle/Resources/config/serializer/sonata"
      ApplicationSopinetUserBundle:
        namespace_prefix: "Sopinet\\UserBundle"
        path: "@ApplicationSopinetUserBundle/Resources/config/serializer/"

# Sonata Block
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:
        sonata.admin.block.admin_list:
        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:
        sonata.block.service.tableinput:
